#!/usr/bin/lua

local Api_URL = " http://things.ubidots.com/api/v1.6/"
local Head1 = "\"Accept: application/json; indent=4\""
local Head2 = "\"Content-Type: application/json\""


--check internet connection
function internet_up()
  local f = io.popen("ping -c1 google.com | grep ttl")
  local l = f:read("*a")
  f:close()
  if l == '' then
    return false --internet down
  else
    return true --internet up
  end
end


--Starts program prog in a separated process and returns a file handle 
--that you can use to read data from this program
function read_data_from_program(cmd)
   file=io.popen(cmd)
   result= file:read("*all")
   file:close()
   return result
end


--write to a file
function write_file(filename, data)
   file = io.open(filename, "w")
   file:write(data)
   file:close()
end


--obtain a token based on a given api_key
function get_token(api_Key)
   if not internet_up() then return false end
   local URL = Api_URL .. "auth/token"
   local api_String = "\"X-Ubidots-ApiKey: " .. api_Key .. "\""
   local dataURL = URL
   local cmd =  "curl -v -XPOST -H " ..  api_String .. dataURL
   my_token = read_data_from_program(cmd)

   if string.sub(my_token,3,7)=="token" then
      my_token = string.sub(my_token,12,string.len(my_token)-2) --trim unwanted text
      return true  --valid token
   else
      return false --invalid token
   end
end


--post data to Ubidots deviceID variable
function post_value(deviceID, data)
   if not internet_up() then return false end
   local URL = Api_URL .. "variables/"
   local dataURL = URL .. deviceID .. "/values"
   local api_token = "\"X-Auth-Token: " .. my_token .. "\""
   local value = "\'{\"value\":".. data .."}\'"
   local cmd =  "curl -i --header ".. Head1 .. " --header " .. Head2 .. " --header " .. api_token .. " -X POST -d " .. value .. dataURL
   os.execute(cmd)	--update sensor datapoint
   return true
end


--get data from Ubidots deviceID variable
--get all data from an Ubidots deviceID if get_method=all
--otherwise, get the last value only
function get_value(deviceID, get_method, filename)
   if not internet_up() then return false end
   local dataURL = Api_URL .. "variables/" .. deviceID 
   local api_token = "\"X-Auth-Token: " .. my_token .. "\""
   local cmd = "curl -i --header ".. Head1 .. " --header " .. api_token .. " -X GET " .. dataURL
   if get_method=="all" then cmd = cmd .. "/values" end
   my_data = read_data_from_program(cmd)
   if filename~=nil then
     writeData_toFile(filename, my_data) 
   end 
   return true
end


--write data to a file
function writeData_toFile(filename, my_data)
   filename ="/tmp/" .. filename --always save file to tmp folder
   os.remove(filename)
print("---------------")
print(filename)

   write_file(filename, my_data)
   return true
end

------------------------------------------------------------------------------

function print_usage() 
  print("Syntax: ubidots -action api_key [deviceID] [value]\n")

  print("Example: Obtain a token")
  print("ubitos -token your_api_key_here \n")

  print("Example: Get last value:")
  print("ubitos -get your_api_key_here your_deviceID_here\n")

  print("Example: Get a list values:")
  print("ubitos -get your_api_key_here your_deviceID_here all\n")

  print("Example: Post a value:")
  print("ubitos -post your_api_key_here your_deviceID_here 100\n")
  return
end

local action=arg[1]
local api_key=arg[2]
local deviceID=arg[3]
local value=arg[4]
local filename=arg[5]

if action=="-help" then
  print_usage()
  return
end

if action~="-token" and action~="-get" and action~="-post" then
  print("Action (-token, -get, -post )required.\n")
  return
end

if api_key==nil then
  print("API key require.\n")
  return
end

--obtain a token
if action=="-token" then
   if get_token(api_key) then
     print(my_token)
   else
     print("Invalid key.\n")
   end
end

--get value
if action=="-get" then
  if deviceID==nil then
    print("Device ID require.\n")
  else   
    if not get_token(api_key) then
      print("Failed to obtain token.\n")
    else
      get_value(deviceID, value, filename)
      print(my_data)
    end
  end
end


--post value
if action=="-post" then
  if deviceID==nil then
    print("Device ID require.\n")
  elseif value==nil then
    print("Value require")
  else    
    if not get_token(api_key) then
	print("Failed to obtain token\n")
    else
       post_value(deviceID,value)
    end
  end
end
